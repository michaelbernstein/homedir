" Set up pathogen
filetype plugin off
filetype off
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()
filetype on
filetype plugin on

set visualbell
set textwidth=1000 "should be 79
set showmatch
set showmode
set showcmd
set ignorecase
set backspace=indent,eol,start
set tabstop=4
set shiftwidth=4
set softtabstop=4
set modeline

set smartcase
set hidden
set history=1000
set scrolloff=2
set incsearch
set hlsearch
set ttyfast

set mouse=a

" see :help smartindent for inoremap details
set smartindent
set smarttab
set expandtab

" turn off annoying X-window title renaming
" handle window crap
set notitle
set ruler
set laststatus=2
set nobackup
set writebackup

" Want the current line hilighted
set cursorline

" Better filename completion (more like the shell)
set wildmode=longest:list
set wildmenu

set directory^=~/.vimswap//

" Config for supertab completion and clang autocomplete
set completeopt=menu,menuone,longest
set pumheight=15
let g:SuperTabDefaultCompletionType="context"
let g:clang_complete_auto=0
let g:clang_complete_copen=1

" Some configuration for omnicompletion
"inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"
"inoremap <expr> <Esc> pumvisible() ? "\<C-e>" : "\<Esc>"
"inoremap <expr> <Nul> "\<C-x>\<C-o>\<C-n>\<C-p>"

" xml-plugin opts before ftplugins turned on
let xml_use_html = 1

autocmd!
syntax on
autocmd BufNewFile,BufRead *.js			so $HOME/.vim/javascript.vim|setl list listchars=tab:>>
autocmd BufNewFile,BufRead *.c,*.h		so $HOME/.vim/c.vim
autocmd BufNewFile,BufRead *.cpp        so $HOME/.vim/cpp.vim
autocmd BufNewFile,BufRead **/mozilla-central*/*.cpp,**/mozilla-central*/*.h so $HOME/.vim/mozilla.vim
autocmd BufNewFile,BufRead **/mozilla-central*/*.js so $HOME/.vim/mozilla_js.vim
autocmd BufNewFile,BufRead Make*,make*		so $HOME/.vim/Make.vim
autocmd BufNewFile,BufRead *.*sql*,*.dump	so $HOME/.vim/sql.vim
autocmd BufNewFile,BufRead *.*sql*,*.dump	so $VIMRUNTIME/syntax/sql.vim
autocmd BufNewFile,BufRead *.py,SConstruct	so $HOME/.vim/python.vim|setl list listchars=tab:>>
autocmd BufNewFile,BufRead *.pyx,*.pxd		so $HOME/.vim/pyrex.vim|setl list listchars=tab:>>
autocmd BufNewFile,BufRead *.txt		setl textwidth=78 "so $HOME/.vim/txt.vim

" according to smartindent help, this makes comments align as i wish
inoremap # X#

inoremap jj <Esc>

map <C-k> :tabp<CR>
map <C-j> :tabn<CR>

let mapleader = ","
nmap <leader>e :edit <C-R>=getcwd() . "/"<CR>
nmap <leader>f :FufFile!<CR>
nmap <leader>j :FufBuffer<CR>
nmap <leader>b :BufExplorer<CR>

let g:fuf_abbrevMap = {
    \   "^mc:" : [
    \     "~/src/mozilla-central/**/",
    \   ],
    \   "^necko:" : [
    \     "~/src/mozilla-central/netwerk/**/",
    \   ],
    \ }

" http://www.vim.org/tips/tip.php?tip_id=94
set tags=tags;/,~/src/*/tags

" Make colors mesh with gvim and other things I like
hi Comment ctermfg=Cyan
hi PreProc ctermfg=Cyan
hi Statement ctermfg=Yellow
hi Type ctermfg=40
hi Constant ctermfg=200 cterm=NONE
hi LineTooLong cterm=underline term=underline
hi TrailingWhitespace ctermbg=red term=underline
hi CursorLine term=bold cterm=NONE ctermbg=233
hi vimOption ctermfg=Blue
hi Search NONE
hi Search term=reverse cterm=reverse
hi Pmenu ctermbg=20
hi PmenuSel ctermbg=165
let python_highlight_all = 1

" Have the status line show the filename, whether or not it's modified,
" read-only, a help buffer, and type on the left. Show line number, column
" number, and percentage through file on right
set statusline=%F%m%r%h%y%=%l,%v\ [%p%%]

" Setup hilighting for certain line conditions
au BufWinEnter * let w:m1=matchadd('LineTooLong', '\%>80v.\+', -1)
au BufWinEnter * let w:m2=matchadd('TrailingWhitespace', '\s\+\%#\@<!$', -1)

" General settings for miniBufExplorer (gvim overrides some of these)
let g:miniBufExplModSelTarget = 1
let g:miniBufExplorerMoreThanOne = 100

" Setup NERDTree and Taglist
nnoremap <silent> <F6> :NERDTreeToggle $HOME/src<CR>
nnoremap <silent> <F5> :TlistToggle<CR>

let NERDTreeWinSize = 45

let Tlist_WinWidth = 45
let Tlist_File_Fold_Auto_Close = 1

" Make editing in command-line mode simpler for me - emacs-style
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>
cnoremap <C-D> <Del>
cnoremap <C-N> <Down>
cnoremap <C-P> <Up>

" Enable nproject
let g:NProjectEnableHooks = 1

" Easy way to clear hilight from search
nnoremap <leader><space> :noh<CR>

" Enable autotag - Not until we get one that produces a workable tags file
let g:autotagDisabled = 1
"let g:autotagCtagsCmd = ~/bin/ctags.sh
"so $HOME/.vim/autotag.vim

" Bring in machine-local customizations
if filereadable(glob("~/.vimrc.local"))
    so ~/.vimrc.local
endif
