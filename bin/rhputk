#!/usr/bin/env python

import optparse
import os
import subprocess
import sys

__uimage = '/home/hurley/src/rockhopper/build/%s/%s/arch/arm/boot/uImage'

def __find_target():
    startdir = curdir = os.getcwd()
    rval = 'unknown'
    while curdir.startswith(__linux_root):
        if os.path.exists(os.path.join(curdir, '.git')):
            rval = os.path.split(curdir)[1]
            break
        curdir, _ = os.path.split(curdir)
        print 'c =', curdir
        os.chdir(curdir)
    os.chdir(startdir)
    return rval

def linux_putk(filename='memory'):
    git = subprocess.Popen("git status | grep 'On branch' | cut -d' ' -f4",
        shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    branch, _ = git.communicate()
    branch = branch.strip().replace('/', '_')
    if not branch:
        if git.returncode:
            raise Exception, 'Could not determine git branch!'
        branch = 'onetime'

    target = __find_target()
    uimage = __uimage % (target, branch)

    if not os.path.exists(uimage):
        raise Exception, 'uImage %s does not appear to exist!' % uimage

    if filename == 'memory':
        dest = 'mem://0x04000000'
    else:
        dest = 'file://%s' % filename

    cmd = 'novacom put %s < %s' % (dest, uimage)
    print cmd
    os.system(cmd)

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-f', '--file', dest='file', default='memory',
        help=' filename to put kernel image in (defaults to memory)')

    opts, args = parser.parse_args()

    try:
        linux_putk(opts.file)
    except Exception, e:
        print str(e)
        sys.exit(1)

    sys.exit(0)
