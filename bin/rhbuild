#!/usr/bin/env python

import optparse
import os
import shutil
import subprocess
import sys

__build_root = '/home/hurley/src/rhbuild/%s'

def linux_build(meat, force_reconfig=False, force_rebuild=False):
    git = subprocess.Popen("git status | grep 'On branch' | cut -d' ' -f4",
        shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    branch, _ = git.communicate()
    branch = branch.strip()
    if not branch:
        if git.returncode:
            raise Exception, 'Could not determine git branch!'
        branch = 'onetime'

    buildroot = __build_root % branch

    if branch == 'onetime':
        try:
            shutil.rmtree(buildroot)
        except:
            pass

    if os.path.exists(buildroot) and force_rebuild:
        print "=================================================="
        print "make mrproper O=%s" % buildroot
        print "=================================================="
        os.system("make mrproper O=%s" % buildroot)
        print ""
	force_reconfig = True
    elif not os.path.exists(buildroot):
        os.mkdir(buildroot)
	force_reconfig = True

    if force_reconfig:
        print "=================================================="
        print "make %s_defconfig O=%s" % (meat, buildroot)
        print "=================================================="
        os.system("make %s_defconfig O=%s" % (meat, buildroot))
        print ""

    print "=================================================="
    print "make uImage O=%s" % buildroot
    print "=================================================="
    os.system("make uImage O=%s" % buildroot)

if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option('-f', '--force', dest='force', help='force rebuild',
        default=False, action='store_true')
    parser.add_option('-c', '--config', dest='config', help='force reconfig',
        default=False, action='store_true')

    opts, args = parser.parse_args()

    if not args:
        print 'Need a defconfig to build!'
        sys.exit(1)

    try:
        linux_build(args[0], opts.config, opts.force)
    except Exception, e:
        print str(e)
        sys.exit(1)

    sys.exit(0)
